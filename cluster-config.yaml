apiVersion: kubekey.kubesphere.io/v1alpha2
kind: Cluster
metadata:
  name: sample
spec:
  hosts:
# Master
# [vagrant@kmaster ~]$ ip a| grep 192.168
#     inet 192.168.121.125/24 brd 192.168.121.255 scope global dynamic noprefixroute eth0
# [vagrant@kmaster ~]$ ip a| grep 16.160
#     inet 172.16.160.209/24 brd 172.16.160.255 scope global dynamic noprefixroute eth1
# Worker
# [vagrant@kworker1 ~]$ ip a| grep 192.1
#     inet 192.168.121.118/24 brd 192.168.121.255 scope global dynamic noprefixroute eth0
# [vagrant@kworker1 ~]$ ip a| grep 16.160
#     inet 172.16.160.101/24 brd 172.16.160.255 scope global noprefixroute eth1
# [vagrant@kworker1 ~]$ 
  - {name: kmaster , address: 192.168.121.125, internalAddress: 172.16.160.209, user: root, password: "admin"}
  - {name: kworker1, address: 192.168.121.118, internalAddress: 172.16.160.101, user: root, password: "admin"}
  roleGroups:
    etcd:
    - kmaster
    control-plane: 
    - kmaster
    worker:
    - kworker1
  controlPlaneEndpoint:
    ## Internal loadbalancer for apiservers 
    # internalLoadbalancer: haproxy

    domain: lb.kubesphere.local
    address: ""
    port: 6443
  kubernetes:
    version: v1.23.10
    clusterName: cluster.local
    autoRenewCerts: true
    containerManager: docker
  etcd:
    type: kubekey
  network:
    plugin: calico
    kubePodsCIDR: 10.233.64.0/18
    kubeServiceCIDR: 10.233.0.0/18
    ## multus support. https://github.com/k8snetworkplumbingwg/multus-cni
    multusCNI:
      enabled: false
  registry:
    privateRegistry: ""
    namespaceOverride: ""
    registryMirrors: []
    insecureRegistries: []
  addons: []


